########
# Copyright (c) 2019 Atos Spain SA. All rights reserved.
#
# This file is part of Croupier.
#
# Croupier is free software: you can redistribute it and/or modify it
# under the terms of the Apache License, Version 2.0 (the License) License.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT ANY WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT, IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT
# OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# See README file for full disclaimer information and LICENSE file for full
# license information in the project root.
#
# @author: Javier Carnero
#          Atos Research & Innovation, Atos Spain S.A.
#          e-mail: javier.carnero@atos.net
#
# blueprint.yaml

tosca_definitions_version: cloudify_dsl_1_3

imports:
  # to speed things up, it is possible to download this file,
  - http://raw.githubusercontent.com/ari-apc-lab/croupier/master/resources/types/cfy_types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/2.9.0/plugin.yaml
  # HPC pluging
  - http://raw.githubusercontent.com/ari-apc-lab/croupier/master/plugin.yaml
  - inputs-def.yaml

node_templates:
  hpc_wm:
    type: croupier.nodes.WorkloadManager
    properties:
      config: { get_input: hpc_wm_config }
      credentials: { get_input: hpc_wm_credentials }
      external_monitor_entrypoint: { get_input: monitor_entrypoint }
      job_prefix: { get_input: job_prefix }
      base_dir: { get_input: "hpc_base_dir" }
      monitor_period: 15
      skip_cleanup: true
      workdir_prefix: "single_singularity"

  openstack_wm:
    type: croupier.nodes.WorkloadManager
    properties:
      config: { get_input: cloud_wm_config }
      credentials: { get_input: cloud_wm_credentials }
      external_monitor_entrypoint: { get_input: monitor_entrypoint }
      job_prefix: { get_input: job_prefix }
      workdir_prefix: "single_openstack"
    relationships:
      - type: wm_contained_in
        target: my_server

  hpc_job:
    type: croupier.nodes.SingularityJob
    properties:
      job_options:
        pre:
          - { get_input: mpi_load_command }
          - { get_input: singularity_load_command }
        partition: { get_input: partition_name }
        image:
          {
            concat:
              [
                { get_input: singularity_image_storage },
                "/",
                { get_input: singularity_image_filename },
              ],
          }
        volumes:
          - { get_input: scratch_voulume_mount_point }
        command: "touch single.test"
        nodes: 1
        tasks: 1
        tasks_per_node: 1
        max_time: "00:01:00"
      deployment:
        bootstrap: "scripts/singularity_bootstrap_example.sh"
        #revert: 'scripts/singularity_revert_example.sh'
        inputs:
          - { get_input: singularity_image_storage }
          - { get_input: singularity_image_filename }
          - { get_input: singularity_image_uri }
      skip_cleanup: True
    relationships:
      - type: job_managed_by_wm
        target: hpc_wm

  vm_job:
    type: croupier.nodes.Job
    properties:
      job_options:
        type: "SHELL"
        command: "touch single_vm.test"
      publish:
        - dataset: { get_input: ckan_outputs_dataset }
          file_path: "$CURRENT_WORKDIR/single_vm.test"
          name: "single_vm"
          description: "output test vm"
    relationships:
      - type: job_managed_by_wm
        target: openstack_wm

  ########### OpenStack plugin ##########
  croupier-network:
    type: cloudify.openstack.nodes.Network
    properties:
      use_external_resource: true
      resource_id: { get_input: cloud_network }
      openstack_config: { get_input: openstack_config }

  keypair:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      resource_id: { concat: ["autokeypair_", { get_input: instance_id }] }
      private_key_path:
        { concat: [keys_repo/, { get_property: [SELF, resource_id] }] }
      openstack_config: { get_input: openstack_config }

  my_floating_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      #use_external_resource: true
      resource_id: { concat: ["autoip_", { get_input: instance_id }] }
      openstack_config: { get_input: openstack_config }
      floatingip:
        floating_network_name: { get_input: cloud_external_network }

  my_server:
    type: cloudify.openstack.nodes.Server
    properties:
      agent_config:
        install_method: none
      resource_id: cfy_test
      image: { get_input: cloud_image }
      flavor: { get_input: cloud_flavor }
      openstack_config: { get_input: openstack_config }
    relationships:
      - type: cloudify.openstack.server_connected_to_keypair
        target: keypair
      - type: cloudify.relationships.connected_to
        target: croupier-network
      - type: cloudify.openstack.server_connected_to_floating_ip
        target: my_floating_ip

outputs:
  single_job_name:
    description: single job name in the VM
    value: { get_attribute: [vm_job, job_name] }
