########
# Copyright (c) 2017-2018 MSO4SC - javier.carnero@atos.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

tosca_definitions_version: cloudify_dsl_1_3

imports:
    # to speed things up, it is possible to download this file,
    - http://raw.githubusercontent.com/ari-apc-lab/croupier/master/resources/types/cfy_types.yaml
    - http://www.getcloudify.org/spec/openstack-plugin/2.9.0/plugin.yaml
    # HPC pluging
    - http://raw.githubusercontent.com/ari-apc-lab/croupier/master/plugin.yaml
    - inputs-def.yaml

node_templates:
  openstack_wm:
    type: hpc.nodes.WorkloadManager
    properties:
      config: { get_input: cloud_wm_config }
      credentials: { get_input: cloud_wm_credentials }
      external_monitor_entrypoint: { get_input: monitor_entrypoint }
      job_prefix: { get_input: job_prefix }
      workdir_prefix: "single_openstack"
    relationships:
    - type: wm_contained_in
      target: my_server
    
  vm_job:
    type: hpc.nodes.Job
    properties:
      job_options:
        type: 'SHELL'
        command: "touch single_vm.test"
      publish:
      - dataset: { get_input: ckan_outputs_dataset }
        file_path: "$CURRENT_WORKDIR/single_vm.test"
        name: "single_vm"
        description: "output test vm"
    relationships:
    - type: job_managed_by_wm
      target: openstack_wm
      
      
  ########### OpenStack plugin ##########
  mso4sc-network:
    type: cloudify.openstack.nodes.Network
    properties:
      use_external_resource: true
      resource_id: { get_input: cloud_network }
      openstack_config: { get_input: openstack_config }

  keypair:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      resource_id: { concat: ["autokeypair_", { get_input: instance_id}] }
      private_key_path: { concat: [keys_repo/, { get_property: [SELF,resource_id] }] }
      openstack_config: { get_input: openstack_config }

  #my_floating_ip:
  #  type: cloudify.openstack.nodes.FloatingIP
  #  properties:
  #    use_external_resource: true
  #    resource_id: { get_input: openstack_floatingip }
  #    openstack_config: { get_input: openstack_config }

  my_server:
    type: cloudify.openstack.nodes.Server
    properties:
      agent_config:
        install_method: none
      resource_id: cfy_test
      image: { get_input: cloud_image }
      flavor: { get_input: cloud_flavor }
      openstack_config: { get_input: openstack_config }
    relationships:
    - type: cloudify.openstack.server_connected_to_keypair
      target: keypair
    - type: cloudify.relationships.connected_to
      target: mso4sc-network
    #- type: cloudify.openstack.server_connected_to_floating_ip
    #  target: my_floating_ip

outputs:
  single_job_name:
    description: single job name in the VM
    value: { get_attribute: [vm_job, job_name] }
